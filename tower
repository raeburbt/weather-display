<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Weather Display</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      width: 100vw;
      height: 100vh;
      background-color: #000;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
    }
    h2 {
      margin: 32px 0 16px;
      font-size: 3.5rem;
      color: white;
      text-align: center;
    }
    #weather {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 12px;
      width: 100%;
      max-width: 1299px;
      margin: 0 auto 16px; /* center horizontally and add bottom margin */
    }
    .period {
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.3);
      padding: 16px;
      font-size: 1.25rem;
      text-align: center;
    }
    .period img {
      max-width: 80px;
      margin: 0 auto 0.75rem;
    }
  </style>
</head>
<body>
  <h2>Mammoth Hot Springs Forecast</h2>
  <div id="weather">Loading…</div>
  <script>
    const apiUrl = 'https://api.weather.gov/gridpoints/RIW/60,203/forecast';
    async function updateWeather() {
      const container = document.getElementById('weather');
      try {
        const res = await fetch(apiUrl);
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        const json = await res.json();
        const periods = json.properties.periods.slice(0, 5);
        container.innerHTML = periods.map(p => `
          <div class="period">
            <h3>${p.name}</h3>
            <img src="${p.icon}" alt="${p.shortForecast}" />
            <p><strong>${p.temperature}°${p.temperatureUnit}</strong></p>
            <p>${p.shortForecast}</p>
          </div>
        `).join('');
      } catch (err) {
        container.innerHTML = `<p>⚠️ Unable to load forecast</p>`;
        console.error('Weather API error:', err);
      }
    }
    updateWeather();
    setInterval(updateWeather, 10 * 60 * 1000);
  </script>
</body>
</html>
